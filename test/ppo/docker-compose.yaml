services:
  redis:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf  --save ''
    volumes:
      - ../../config/redis.conf:/usr/local/etc/redis/redis.conf
    secrets:
      - redis_secret
    ports:
      - 6379:6379
    networks:
      - server_net

  training_node:
    build:
      dockerfile: soulsai/distributed/server/training_node/Dockerfile
      context: ../../.
    volumes:
      - ./config/:/home/SoulsAI/config/ # Mount test config in place of server config
      - ../:/home/SoulsAI/test/
      - ../../soulsai/:/home/SoulsAI/soulsai/
      - ../../saves/:/home/SoulsAI/saves/
    secrets:
      - redis_secret
    depends_on:
      - redis
    # Comment out the following lines if you don't have a GPU
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    user: "1000"
    networks:
      - server_net

  telemetry_node:
    build:
      dockerfile: soulsai/distributed/server/telemetry_node/Dockerfile
      context: ../../.
    volumes:
      - ./config/:/home/SoulsAI/config/ # Mount test config in place of server config
      - ../:/home/SoulsAI/test/
      - ../../soulsai/:/home/SoulsAI/soulsai/ # Reflect dev changes in docker containers without rebuilding
      - ../../saves/:/home/SoulsAI/saves/
      - /etc/passwd:/etc/passwd:ro # Workaround for WandB pwd.getpwuid(os.getuid())[0] error
    secrets:
      - redis_secret
      - wandb_api_key
    depends_on:
      - redis
    user: "1000"
    networks:
      - server_net

  client_node:
    build:
      dockerfile: test/ppo/client.Dockerfile
      context: ../../.
    volumes:
      - ./config/:/home/SoulsAI/config/
      - ../:/home/SoulsAI/test/
      - ../../soulsai/:/home/SoulsAI/soulsai/
    secrets:
      - redis_secret
    depends_on:
      - redis
      - training_node
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    user: "1000"
    networks:
      - server_net

  prometheus:
    image: prom/prometheus:v2.39.1
    volumes:
      - ../monitoring/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    profiles:
      - monitoring
    networks:
      - server_net

  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ../monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ../monitoring/grafana/grafana_data:/var/lib/grafana
      - ../monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
    profiles:
      - monitoring
    user: "1000"
    networks:
      - server_net

volumes:
  prometheus-data:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  server_net:
    name: server
    external: True

secrets:
  redis_secret:
    file: ../../config/secrets/redis.secret
  wandb_api_key:
    file: ../../config/secrets/wandb_api_key.secret
